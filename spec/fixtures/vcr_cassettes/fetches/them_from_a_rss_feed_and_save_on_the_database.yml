---
http_interactions:
- request:
    method: get
    uri: https://brunoarueira.com/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 29 Jul 2023 21:11:43 GMT
      Content-Type:
      - application/xml
      Content-Length:
      - '47649'
      Connection:
      - keep-alive
      Accept-Ranges:
      - bytes
      Age:
      - '359626'
      Cache-Control:
      - public, max-age=0, must-revalidate
      Etag:
      - '"8e7ba4d2719928eada55417bec5083a3-ssl-df"'
      Permissions-Policy:
      - interest-cohort=()
      Vary:
      - Accept-Encoding
      X-Nf-Request-Id:
      - 01H6HQWBNXH7HZJ9ACYSQ76601
      Cf-Cache-Status:
      - DYNAMIC
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=J8mOaZeuh4Qjrguzxvlj18%2BcxpNTlhHPe1sA5AlAmXx1gFF0rNyhI7Fzp%2FXrGJUJTiLAcKVIcZBOX2x3HvO7sAagrtGqfcXsJsyULZu1fRQYyjI4cnSWzTF8k5AouzM%2FHKyT"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 7ee85b1b8bc79ca0-GIG
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 29 Jul 2023 21:11:42 GMT
recorded_with: VCR 6.2.0
