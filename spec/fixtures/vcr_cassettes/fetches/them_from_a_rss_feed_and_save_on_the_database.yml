---
http_interactions:
- request:
    method: get
    uri: https://brunoarueira.com/feed.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 16 Aug 2021 15:12:21 GMT
      Content-Type:
      - application/xml
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Accept-Ranges:
      - bytes
      Cache-Control:
      - public, max-age=0, must-revalidate
      Etag:
      - '"5e732f4ef420e5dc10e7e7c92aa67c02-ssl-df"'
      Permissions-Policy:
      - interest-cohort=()
      Vary:
      - Accept-Encoding
      Age:
      - '2'
      X-Nf-Request-Id:
      - 01FD7RAJV1FVNCPJADS8WKKWTR
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=tkxN56L0xK2HbvhTWxtX5BBfgR1e0Ld5BtBLuA4SeGLjTFFVzMDNhT94%2FB2sc8G%2Bb0QTEd1XOa0RAEU2HdunRC0oJ2BB1g5ZengUZdCtWbn5a2yl0%2FQ7flMo%2F5Y0niWR80m%2B"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 67fb99b0ad7f3712-MIA
      Alt-Svc:
      - h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443";
        ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 16 Aug 2021 15:12:21 GMT
recorded_with: VCR 6.0.0
